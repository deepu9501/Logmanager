# Generated by Django 4.2.7 on 2025-03-26 06:24

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='NotificationChannel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Channel name', max_length=100)),
                ('type', models.CharField(choices=[('EMAIL', 'Email'), ('SMS', 'SMS'), ('WEBHOOK', 'Webhook'), ('WEBSOCKET', 'WebSocket')], help_text='Type of notification channel', max_length=10)),
                ('configuration', models.JSONField(default=dict, help_text='Channel configuration (JSON)')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this channel is currently active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'notification channel',
                'verbose_name_plural': 'notification channels',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Template name', max_length=100, unique=True)),
                ('subject', models.CharField(help_text='Subject template with variables', max_length=255)),
                ('content', models.TextField(help_text='Content template with variables')),
                ('html_content', models.TextField(blank=True, help_text='HTML content template (for email)')),
                ('variables', models.JSONField(default=list, help_text='List of variables used in this template')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'notification template',
                'verbose_name_plural': 'notification templates',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('SENT', 'Sent'), ('DELIVERED', 'Delivered'), ('READ', 'Read'), ('FAILED', 'Failed')], default='PENDING', help_text='Current status of the notification', max_length=10)),
                ('subject', models.CharField(help_text='Final subject after variable substitution', max_length=255)),
                ('content', models.TextField(help_text='Final content after variable substitution')),
                ('data', models.JSONField(default=dict, help_text='Data used for variable substitution')),
                ('error_message', models.TextField(blank=True, help_text='Error message if sending failed')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('delivered_at', models.DateTimeField(blank=True, null=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('channel', models.ForeignKey(help_text='Channel used to send this notification', on_delete=django.db.models.deletion.PROTECT, related_name='notifications', to='notifications.notificationchannel')),
                ('template', models.ForeignKey(help_text='Template used for this notification', on_delete=django.db.models.deletion.PROTECT, related_name='notifications', to='notifications.notificationtemplate')),
            ],
            options={
                'verbose_name': 'notification',
                'verbose_name_plural': 'notifications',
                'ordering': ['-created_at'],
            },
        ),
    ]

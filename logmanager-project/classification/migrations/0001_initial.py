# Generated by Django 4.2.7 on 2025-03-26 06:24

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='LogClassification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Classification name', max_length=100, unique=True)),
                ('description', models.TextField(blank=True, help_text='Description of this classification')),
                ('priority', models.PositiveSmallIntegerField(default=0, help_text='Priority level (higher number = higher priority)')),
                ('color_code', models.CharField(default='#CCCCCC', help_text='Color code for UI display (hex format)', max_length=7)),
                ('notification_enabled', models.BooleanField(default=False, help_text='Whether to send notifications for logs with this classification')),
                ('pattern', models.CharField(blank=True, help_text='Regex pattern for automatic classification', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'log classification',
                'verbose_name_plural': 'log classifications',
                'ordering': ['-priority', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ClassificationModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Model name', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Description of this model')),
                ('version', models.CharField(help_text='Model version', max_length=20)),
                ('model_file', models.FileField(help_text='Trained model file', upload_to='classification_models/')),
                ('vectorizer_file', models.FileField(help_text='Text vectorizer file', upload_to='classification_models/')),
                ('accuracy', models.FloatField(blank=True, help_text='Model accuracy score', null=True)),
                ('is_active', models.BooleanField(default=False, help_text='Whether this model is currently active')),
                ('trained_at', models.DateTimeField(help_text='When the model was trained')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'classification model',
                'verbose_name_plural': 'classification models',
                'ordering': ['-created_at'],
                'unique_together': {('name', 'version')},
            },
        ),
        migrations.CreateModel(
            name='ClassificationKeyword',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyword', models.CharField(help_text='Keyword used for classification', max_length=100)),
                ('weight', models.FloatField(default=1.0, help_text='Weight of this keyword (higher = more important)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('classification', models.ForeignKey(help_text='The classification this keyword belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='keywords', to='classification.logclassification')),
            ],
            options={
                'verbose_name': 'classification keyword',
                'verbose_name_plural': 'classification keywords',
                'ordering': ['-weight'],
                'unique_together': {('classification', 'keyword')},
            },
        ),
    ]
